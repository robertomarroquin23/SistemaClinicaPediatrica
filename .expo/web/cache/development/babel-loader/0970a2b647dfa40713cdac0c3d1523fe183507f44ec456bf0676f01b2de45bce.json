{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    if (email === 'holamundo@gmail.com' && password === '112233') {\n      navigation.navigate('Home');\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Login\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: setEmail\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleLogin,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  form: {\n    width: '100%',\n    maxWidth: 400,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 12,\n    paddingHorizontal: 8,\n    borderRadius: 5\n  },\n  button: {\n    width: '100%',\n    backgroundColor: '#007BFF',\n    paddingVertical: 20,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","navigate","alert","style","styles","container","children","form","title","input","placeholder","value","onChangeText","secureTextEntry","button","onPress","buttonText","create","flex","justifyContent","alignItems","padding","backgroundColor","width","maxWidth","fontSize","marginBottom","textAlign","height","borderColor","borderWidth","paddingHorizontal","borderRadius","paddingVertical","marginTop","color","fontWeight"],"sources":["C:/Users/rober/Documents/React Native/SistemaClinicaPediatrica/frontend/src/screen/LoginScreen/loginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleLogin = () => {\r\n        if (email === 'holamundo@gmail.com' && password === '112233') {\r\n            navigation.navigate('Home');\r\n        } else {\r\n            alert('Invalid credentials');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.form}>\r\n                <Text style={styles.title}>Login</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChangeText={setPassword}\r\n                    secureTextEntry\r\n                />\r\n                <TouchableOpacity style={styles.button} onPress={handleLogin}>\r\n                    <Text style={styles.buttonText}>Login</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 20,\r\n        backgroundColor: '#fff',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        maxWidth: 400,\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        marginBottom: 20,\r\n        textAlign: 'center',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        height: 40,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        marginBottom: 12,\r\n        paddingHorizontal: 8,\r\n        borderRadius: 5,\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        backgroundColor: '#007BFF',\r\n        paddingVertical: 20,\r\n        borderRadius: 5,\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n    },\r\n    buttonText: {\r\n        color: '#fff',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}